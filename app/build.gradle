apply plugin: 'com.android.application'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'com.github.ben-manes.versions'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "org.example.moex"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 2
        versionName "2.0"

        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"

            minifyEnabled false
        }
    }

    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
        }
        prod {
        }
    }

    flavorDimensions "full"

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name == 'release'
                && variant.getFlavors().get(0).name == 'mock') {
            variant.setIgnore(true);
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'

        mock.java.srcDirs += 'src/mock/kotlin'
        prod.java.srcDirs += 'src/prod/kotlin'

        androidTest.java.srcDirs += 'src/androidTest/kotlin'
        androidTestMock.java.srcDirs += 'src/androidTestMock/kotlin'
    }

    testOptions {
        // Whether unmocked methods from android.jar should throw exceptions or
        // return default values (i.e. zero or null).
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${rootProject.kotlinVersion}"

    // Dagger
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"

    // KAndroid
    implementation "com.pawegio.kandroid:kandroid:${rootProject.kAndroidVersion}@aar"

    // Android Support Libraries
    implementation "com.android.support:appcompat-v7:${rootProject.supportLibraryVersion}"
    implementation "com.android.support:recyclerview-v7:${rootProject.supportLibraryVersion}"
    implementation "com.android.support:design:${rootProject.supportLibraryVersion}"

    // ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:${rootProject.lifecycleVersion}"
    // alternatively, just ViewModel
//    implementation "android.arch.lifecycle:viewmodel:${rootProject.lifecycleVersion}"
    // alternatively, just LiveData
//    implementation "android.arch.lifecycle:livedata:${rootProject.lifecycleVersion}"
    kapt "android.arch.lifecycle:compiler:${rootProject.lifecycleVersion}"

    // Room (use 1.1.0-beta2 for latest beta)
    implementation "android.arch.persistence.room:runtime:${rootProject.roomVersion}"
    kapt "android.arch.persistence.room:compiler:${rootProject.roomVersion}"

    // Paging
    implementation "android.arch.paging:runtime:${rootProject.pagingVersion}"

    // RxJava support for Room (use 1.1.0-beta2 for latest alpha)
    implementation "android.arch.persistence.room:rxjava2:${rootProject.roomVersion}"

    // ReactiveStreams support for LiveData
    implementation "android.arch.lifecycle:reactivestreams:${rootProject.lifecycleVersion}"

    // RxJava support for Paging
    implementation "android.arch.paging:rxjava2:${rootProject.rxPagingVersion}"

    // Test helpers for LiveData
    testImplementation "android.arch.core:core-testing:${rootProject.lifecycleVersion}"

    // Test helpers for Room
    testImplementation "android.arch.persistence.room:testing:${rootProject.roomVersion}"

    // Joda Time for Android
    implementation "net.danlew:android.joda:${rootProject.androidJoda}"

    // OkHttp Logging
    implementation "com.squareup.okhttp3:logging-interceptor:${rootProject.okHttpVersion}"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:${rootProject.retrofitVersion}"
    implementation("com.squareup.retrofit2:converter-simplexml:${rootProject.retrofitVersion}") {
        exclude group: 'xpp3', module: 'xpp3'
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
    }
    implementation "com.squareup.retrofit2:adapter-rxjava2:${rootProject.retrofitVersion}"

    // Rx
    implementation "io.reactivex.rxjava2:rxkotlin:${rootProject.rxKotlinVersion}"
    implementation "io.reactivex.rxjava2:rxandroid:${rootProject.rxAndroidVersion}"

    // Anko SQLite
    implementation "org.jetbrains.anko:anko-sqlite:${rootProject.ankoVersion}"

    // Moxy
    implementation "com.arello-mobile:moxy:${rootProject.moxyVersion}"
    implementation "com.arello-mobile:moxy-app-compat:${rootProject.moxyVersion}"
    kapt "com.arello-mobile:moxy-compiler:${rootProject.moxyVersion}"

    // MPAndroidChart
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'

    // Unit Testing
    testImplementation "junit:junit:${rootProject.junitVersion}"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:${rootProject.kotlinVersion}"
    testImplementation("com.nhaarman:mockito-kotlin:${rootProject.kotlinMockitoVersion}") {
        exclude group: 'org.jetbrains.kotlin'
    }
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:${rootProject.kotlinVersion}"

    // UI Testing
    androidTestImplementation("com.android.support.test:runner:${rootProject.runnerVersion}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation("com.android.support.test:rules:${rootProject.rulesVersion}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation("com.android.support.test.espresso:espresso-core:${rootProject.espressoVersion}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}

dexcount {
    orderByMethodCount = true
}