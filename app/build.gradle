apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.getkeepsafe.dexcount'

android {
    compileSdkVersion rootProject.compileSdkVersion

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    defaultConfig {
        applicationId "org.example.moex"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 2
        versionName "2.0"

        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"

            minifyEnabled false
        }
    }

    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
        }
        prod {
        }
    }

    flavorDimensions "full"

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name == 'release'
                && variant.getFlavors().get(0).name == 'mock') {
            variant.setIgnore(true)
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'

        mock.java.srcDirs += 'src/mock/kotlin'
        prod.java.srcDirs += 'src/prod/kotlin'

        androidTest.java.srcDirs += 'src/androidTest/kotlin'
        androidTestMock.java.srcDirs += 'src/androidTestMock/kotlin'
    }

    testOptions {
        // Whether unmocked methods from android.jar should throw exceptions or
        // return default values (i.e. zero or null).
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation libraries
    kapt librariesKapt

    testImplementation testLibraries
    androidTestImplementation androidTestLibraries

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${rootProject.kotlinVersion}"
    implementation "androidx.core:core-ktx:${rootProject.ktxVersion}"

    // KAndroid
    implementation "com.pawegio.kandroid:kandroid:${rootProject.kAndroidVersion}@aar"

    // AndroidX Libraries
    implementation "androidx.appcompat:appcompat:${rootProject.appcompatVersion}"
    implementation "androidx.recyclerview:recyclerview:${rootProject.recyclerViewVersion}"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:${rootProject.swipeRefreshLayoutVersion}"

    // Material
    implementation "com.google.android.material:material:${rootProject.materialVersion}"

    // Joda Time for Android
    implementation "net.danlew:android.joda:${rootProject.androidJoda}"

    // OkHttp Logging
    implementation "com.squareup.okhttp3:logging-interceptor:${rootProject.okHttpVersion}"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:${rootProject.retrofitVersion}"
    implementation("com.squareup.retrofit2:converter-simplexml:${rootProject.retrofitVersion}") {
        exclude group: 'xpp3', module: 'xpp3'
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
    }

    // MPAndroidChart
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'

    // Unit Testing
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:${rootProject.kotlinVersion}"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:${rootProject.kotlinVersion}"
}

dexcount {
    orderByMethodCount = true
}